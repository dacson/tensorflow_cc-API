A class to load tf models and do predict by Makefile

Step 1:
  put tensorflow head files into as include < you may need do '  ln -s /absolute/path/to/your/tensorflow/header/folder /absolute/dst/path  '  or just copy that folder here >
  (in this repo, include is a softlink to my local machine's folder)
  put libtensorflow_cc.so and libcudnn.so into ./lib (the same as include)
  # if do not have, uhm...
  # follow tensorflow home page or find other ways...
  # my includes and lib(tf api r1.2) now uploaded at ' https://drive.google.com/open?id=0B9BHx-TgQtxjcXhEQU5YazVnbWM ' also can download and tar it

Step 2:
  put category.txt and model.pb in ./resource
  modify the operation name in TensorflowLoader::doPredict()
  ./build.sh
  # This may clean up and build:
    tf_api.o in ./obj
    gen in ./bin
    libtfloader.so and libtfloader.a in ./lib

Step 3:
  ./run.sh

-------------------------------
Errors may occur, mainly because of the -I or -L and -l not included...


------------------------------  Intro
TensorflowLoader is such a class that does:
1. loadModel() and loadLabel() allow to load model via each file name.
2. feedPath() allow to obtain image from a file path.
3. feedRawData() allow to get data from a camera RGB data.
4. readOperationName() to get operations in defined in pb file, so that we can execute other words, sess->Run() for this operation.
5. doPredict() returns the prediction containing the info of coordinate and confidence and its category.

laMiaSocket is such a class that does:
1. select whether client or server
2. send message between client and server
